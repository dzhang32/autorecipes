[{"path":"/articles/autorecipes.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"autorecipes","text":"unadventurous, --recipe cook, accumulated set ~25 go-meals chosen week. time, selection became repetitive. autorecipes autogroceries developed automate task creating weekly meal plan ordering required ingredients.","code":""},{"path":[]},{"path":"/articles/autorecipes.html","id":"example-recipes","dir":"Articles","previous_headings":"Basic usage","what":"Example recipes","title":"autorecipes","text":"autorecipes defines RecipeBook-class stores names ingredients recipes. autorecipes also includes set 26 example recipes autorecipes::recipebook_example.","code":"recipebook <- recipebook_example  class(recipebook) #> [1] \"RecipeBook\" #> attr(,\"package\") #> [1] \"autorecipes\"  recipes(recipebook) %>% head() #> # A tibble: 6 × 5 #>   index names                                       ingredients fav   last_eaten #>   <int> <chr>                                       <list>      <lgl> <date>     #> 1     1 Akoori Eggs with Spinach & Potato           <Ingrdnts>  FALSE NA         #> 2     2 Crispy Duck with Fava Beans & Caramelised … <Ingrdnts>  FALSE NA         #> 3     3 Chicken with Rosemary Plumns                <Ingrdnts>  FALSE NA         #> 4     4 Chickpea & Sweet Potato Masala              <Ingrdnts>  FALSE NA         #> 5     5 Gaucho Steaks with Chimichurri Salad        <Ingrdnts>  FALSE NA         #> 6     6 Chipotle Bean Taco Salad                    <Ingrdnts>  FALSE NA"},{"path":"/articles/autorecipes.html","id":"set-your-favourite-recipes","dir":"Articles","previous_headings":"Basic usage","what":"Set your favourite recipes","title":"autorecipes","text":"autorecipes allows users set favorite recipes using add_favourites() rm_favourites(). information can used determine subset recipes enter meal plan.","code":"# set the first 3 recipes as favourites recipebook <- add_favourites(recipebook, 1:3)  recipes(recipebook) %>% head() #> # A tibble: 6 × 5 #>   index names                                       ingredients fav   last_eaten #>   <int> <chr>                                       <list>      <lgl> <date>     #> 1     1 Akoori Eggs with Spinach & Potato           <Ingrdnts>  TRUE  NA         #> 2     2 Crispy Duck with Fava Beans & Caramelised … <Ingrdnts>  TRUE  NA         #> 3     3 Chicken with Rosemary Plumns                <Ingrdnts>  TRUE  NA         #> 4     4 Chickpea & Sweet Potato Masala              <Ingrdnts>  FALSE NA         #> 5     5 Gaucho Steaks with Chimichurri Salad        <Ingrdnts>  FALSE NA         #> 6     6 Chipotle Bean Taco Salad                    <Ingrdnts>  FALSE NA"},{"path":"/articles/autorecipes.html","id":"create-a-meal-plan","dir":"Articles","previous_headings":"Basic usage","what":"Create a meal plan","title":"autorecipes","text":"autorecipes allows create meal plan RecipeBook-class object. , can set days meals like plan also whether want consider favourite recipes. create_meal_plan() can either select recipes randomly (method = \"random\") take account last chosen recipe previous meal plan (method = \"auto\").","code":"recipebook <- create_meal_plan(   recipebook,   which_days = c(\"Wed\", \"Thurs\", \"Fri\", \"Sat\", \"Sun\"),    which_meals = \"Dinner\",   method = \"auto\",   fav_only = TRUE )  meal_plan(recipebook) #> # A tibble: 5 × 7 #>   day   meal   recipe_index names                   ingredients fav   last_eaten #>   <fct> <fct>         <int> <chr>                   <list>      <lgl> <date>     #> 1 Wed   Dinner            1 Akoori Eggs with Spina… <Ingrdnts>  TRUE  2022-03-22 #> 2 Thurs Dinner            3 Chicken with Rosemary … <Ingrdnts>  TRUE  2022-03-22 #> 3 Fri   Dinner            2 Crispy Duck with Fava … <Ingrdnts>  TRUE  2022-03-22 #> 4 Sat   Dinner            2 Crispy Duck with Fava … <Ingrdnts>  TRUE  2022-03-22 #> 5 Sun   Dinner            1 Akoori Eggs with Spina… <Ingrdnts>  TRUE  2022-03-22"},{"path":"/articles/autorecipes.html","id":"create-shopping-list","dir":"Articles","previous_headings":"Basic usage","what":"Create shopping list","title":"autorecipes","text":"create_shopping_list() aggregates ingredients required make meal plan shopping list. filter_method determines whether remove store cupboard ingredients (e.g. salt) unlikely want order every week. outputted shopping list designed inputted autogroceries.","code":"recipebook <- create_shopping_list(recipebook, filter_method = \"minimal\")  shopping_list(recipebook) #> # A tibble: 18 × 2 #>    names                   n #>    <chr>               <int> #>  1 rosemary                2 #>  2 baby spinach            1 #>  3 chicken drumsticks      1 #>  4 chicken thighs          1 #>  5 chilli                  1 #>  6 coriander               1 #>  7 duck legs               1 #>  8 fava beans              1 #>  9 french beans            1 #> 10 garam masala            1 #> 11 mixed baby tomatoes     1 #> 12 plums                   1 #> 13 potatoes                1 #> 14 rainbow carrots         1 #> 15 salad potatoes          1 #> 16 savoy cabbage           1 #> 17 thyme                   1 #> 18 white wine              1"},{"path":"/articles/autorecipes.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"autorecipes","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R Under development (unstable) (2022-03-14 r81896) #>  os       Ubuntu 20.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2022-03-22 #>  pandoc   2.17.1.1 @ /usr/local/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package     * version    date (UTC) lib source #>  autorecipes * 1.0.0      2022-03-22 [1] local #>  bslib         0.3.1      2021-10-06 [1] CRAN (R 4.2.0) #>  cachem        1.0.6      2021-08-19 [2] CRAN (R 4.2.0) #>  cli           3.2.0      2022-02-14 [2] CRAN (R 4.2.0) #>  crayon        1.5.0      2022-02-14 [2] CRAN (R 4.2.0) #>  desc          1.4.1      2022-03-06 [2] CRAN (R 4.2.0) #>  digest        0.6.29     2021-12-01 [2] CRAN (R 4.2.0) #>  dplyr         1.0.8      2022-02-08 [2] CRAN (R 4.2.0) #>  ellipsis      0.3.2      2021-04-29 [2] CRAN (R 4.2.0) #>  evaluate      0.15       2022-02-18 [2] CRAN (R 4.2.0) #>  fansi         1.0.2      2022-01-14 [2] CRAN (R 4.2.0) #>  fastmap       1.1.0      2021-01-25 [2] CRAN (R 4.2.0) #>  fs            1.5.2      2021-12-08 [2] CRAN (R 4.2.0) #>  generics      0.1.2      2022-01-31 [2] CRAN (R 4.2.0) #>  glue          1.6.2      2022-02-24 [2] CRAN (R 4.2.0) #>  htmltools     0.5.2      2021-08-25 [1] CRAN (R 4.2.0) #>  jquerylib     0.1.4      2021-04-26 [1] RSPM (R 4.1.0) #>  jsonlite      1.8.0      2022-02-22 [2] CRAN (R 4.2.0) #>  knitr         1.37       2021-12-16 [2] CRAN (R 4.2.0) #>  lifecycle     1.0.1      2021-09-24 [2] CRAN (R 4.2.0) #>  lubridate     1.8.0      2021-10-07 [1] CRAN (R 4.2.0) #>  magrittr    * 2.0.2      2022-01-26 [2] CRAN (R 4.2.0) #>  memoise       2.0.1      2021-11-26 [2] CRAN (R 4.2.0) #>  pillar        1.7.0      2022-02-01 [2] CRAN (R 4.2.0) #>  pkgconfig     2.0.3      2019-09-22 [2] CRAN (R 4.2.0) #>  pkgdown       2.0.2.9000 2022-03-22 [1] Github (r-lib/pkgdown@98d5a5c) #>  purrr         0.3.4      2020-04-17 [2] CRAN (R 4.2.0) #>  R6            2.5.1      2021-08-19 [2] CRAN (R 4.2.0) #>  ragg          1.2.2      2022-02-21 [1] CRAN (R 4.2.0) #>  rlang         1.0.2      2022-03-04 [2] CRAN (R 4.2.0) #>  rmarkdown     2.13       2022-03-10 [1] CRAN (R 4.2.0) #>  rprojroot     2.0.2      2020-11-15 [2] CRAN (R 4.2.0) #>  sass          0.4.0      2021-05-12 [1] RSPM (R 4.1.0) #>  sessioninfo * 1.2.2      2021-12-06 [2] CRAN (R 4.2.0) #>  stringi       1.7.6      2021-11-29 [2] CRAN (R 4.2.0) #>  stringr       1.4.0      2019-02-10 [2] CRAN (R 4.2.0) #>  systemfonts   1.0.4      2022-02-11 [1] CRAN (R 4.2.0) #>  textshaping   0.3.6      2021-10-13 [1] CRAN (R 4.2.0) #>  tibble        3.1.6      2021-11-07 [2] CRAN (R 4.2.0) #>  tidyr         1.2.0      2022-02-01 [2] CRAN (R 4.2.0) #>  tidyselect    1.1.2      2022-02-21 [2] CRAN (R 4.2.0) #>  utf8          1.2.2      2021-07-24 [2] CRAN (R 4.2.0) #>  vctrs         0.3.8      2021-04-29 [2] CRAN (R 4.2.0) #>  xfun          0.30       2022-03-02 [2] CRAN (R 4.2.0) #>  yaml          2.3.5      2022-02-21 [2] CRAN (R 4.2.0) #>  #>  [1] /__w/_temp/Library #>  [2] /usr/local/lib/R/site-library #>  [3] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Zhang. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang D (2022). autorecipes: Automate recipe planning. R package version 1.0.0, https://github.com/dzhang32/autorecipes.","code":"@Manual{,   title = {autorecipes: Automate your recipe planning},   author = {David Zhang},   year = {2022},   note = {R package version 1.0.0},   url = {https://github.com/dzhang32/autorecipes}, }"},{"path":"/index.html","id":"autorecipes","dir":"","previous_headings":"","what":"Automate your recipe planning","title":"Automate your recipe planning","text":"goal autorecipes automate weekly recipe planning, takes care : Creating storing database recipes Customizing weekly meal plans Generating shopping lists ingredients","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automate your recipe planning","text":"autorecipes developed personal use longer active development. can install development version GitHub:","code":"devtools::install_github(\"dzhang32/autorecipes\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Automate your recipe planning","text":"example gives taste autorecipes. like sink teeth detailed tutorial, head vignette.","code":"library(\"autorecipes\") #>  #> Attaching package: 'autorecipes' #> The following objects are masked from 'package:base': #>  #>     units, weekdays  # autorecipes contains an example set of recipes head(recipes(recipebook_example)) #> # A tibble: 6 × 5 #>   index names                                       ingredients fav   last_eaten #>   <int> <chr>                                       <list>      <lgl> <date>     #> 1     1 Akoori Eggs with Spinach & Potato           <Ingrdnts>  FALSE NA         #> 2     2 Crispy Duck with Fava Beans & Caramelised … <Ingrdnts>  FALSE NA         #> 3     3 Chicken with Rosemary Plumns                <Ingrdnts>  FALSE NA         #> 4     4 Chickpea & Sweet Potato Masala              <Ingrdnts>  FALSE NA         #> 5     5 Gaucho Steaks with Chimichurri Salad        <Ingrdnts>  FALSE NA         #> 6     6 Chipotle Bean Taco Salad                    <Ingrdnts>  FALSE NA  # create a meal plan for lunch and dinner across all weekdays recipebook <- create_meal_plan(recipebook_example)  head(meal_plan(recipebook)) #> # A tibble: 6 × 7 #>   day   meal   recipe_index names                   ingredients fav   last_eaten #>   <fct> <fct>         <int> <chr>                   <list>      <lgl> <date>     #> 1 Mon   Lunch             2 Crispy Duck with Fava … <Ingrdnts>  FALSE 2022-03-22 #> 2 Mon   Dinner           26 Afghan Spliced Squash   <Ingrdnts>  FALSE 2022-03-22 #> 3 Tues  Lunch             4 Chickpea & Sweet Potat… <Ingrdnts>  FALSE 2022-03-22 #> 4 Tues  Dinner           16 Creamy Pollock, Samphi… <Ingrdnts>  FALSE 2022-03-22 #> 5 Wed   Lunch            15 Globe Arichoke & Pine … <Ingrdnts>  FALSE 2022-03-22 #> 6 Wed   Dinner           22 New Potato Tagine       <Ingrdnts>  FALSE 2022-03-22  recipebook <- create_shopping_list(recipebook)  head(shopping_list(recipebook)) #> # A tibble: 6 × 2 #>   names               n #>   <chr>           <int> #> 1 garlic clove       13 #> 2 onion               7 #> 3 coriander           6 #> 4 lime                6 #> 5 cherry tomatoes     5 #> 6 bouillon powder     4"},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Automate your recipe planning","text":"autorecipes developed using biocthis.","code":""},{"path":"/reference/Ingredients-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"Ingredients-class object contains information regarding name, quantity units ingredient. Although autorecipes provides Ingredients() constructor, unlikely users need call create Ingredient-class instances directly. Instead, creating RecipeBook-class instance, helper functions included read ingredients appropriate format RecipeBook() constructor read_ingredients().","code":""},{"path":"/reference/Ingredients-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"","code":"Ingredients(names, amounts = 1, units = rep(NA_character_, length(names)))  # S4 method for Ingredients show(object)  # S4 method for Ingredients names(x)  amounts(x)  units(x)  # S4 method for Ingredients as.data.frame(x)"},{"path":"/reference/Ingredients-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"names character() containing names ingredient. amounts numeric() containing amounts ingredient. units character() containing units amount ingredient. object Ingredients-class object. x Ingredients-class object.","code":""},{"path":"/reference/Ingredients-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"names character() containing names ingredient. amounts numeric() containing amounts ingredient. units character() containing units amount ingredient.","code":""},{"path":"/reference/Ingredients-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"Ingredients(names, amounts, units) creates object Ingredients-class.","code":""},{"path":"/reference/Ingredients-class.html","id":"displaying","dir":"Reference","previous_headings":"","what":"Displaying","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"show(ingredients) prints ingredient.","code":""},{"path":"/reference/Ingredients-class.html","id":"getters","dir":"Reference","previous_headings":"","what":"Getters","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"names(ingredients) obtain names ingredient. amounts(ingredients) obtain amounts ingredient. units(ingredients) obtain units ingredient. .data.frame(ingredients) converts ingredients data.frame.","code":""},{"path":"/reference/Ingredients-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S4 class containing names, amounts and units of recipe ingredients — Ingredients-class","text":"","code":"Ingredients(\"salt\", 1, \"tsp\") #> 1 tsp Salt  # one instance can store multiple ingredients Ingredients(c(\"salt\", \"tomatoes\"), c(1, 400), c(\"tsp\", \"g\")) #> 1 tsp Salt #> 400 g Tomatoes  # amounts and units are optional Ingredients(\"Chicken\") #> 1 Chicken"},{"path":"/reference/RecipeBook-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"RecipeBook-class object contains 3 components; 1. set recipes retrievable using recipes(), 2. meal plan created using create_meal_plan() 3. shopping list created using create_shopping_list().","code":""},{"path":"/reference/RecipeBook-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"","code":"RecipeBook(names, ingredients)  # S4 method for RecipeBook show(object)  # S4 method for RecipeBook names(x)  # S4 method for RecipeBook length(x)  recipes(object)  meal_plan(object)  shopping_list(object)  favourites(x)  recipes(object) <- value"},{"path":"/reference/RecipeBook-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"names character() containing name recipes. ingredients character() list() Ingredient-class objects. character(), read using read_ingredients(). object RecipeBook-class object. x RecipeBook-class object. value tibble::tibble() used set recipes slot.","code":""},{"path":"/reference/RecipeBook-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"recipes tibble::tibble() storing names, ingredients favourites status recipes. meal_plan tibble::tibble() storing meal plan, created create_meal_plan(). shopping_list tibble::tibble() storing shopping list, created create_shopping_list().","code":""},{"path":"/reference/RecipeBook-class.html","id":"constructor","dir":"Reference","previous_headings":"","what":"Constructor","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"RecipeBook(names, ingredients) creates object RecipeBook-class.","code":""},{"path":"/reference/RecipeBook-class.html","id":"displaying","dir":"Reference","previous_headings":"","what":"Displaying","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"show(recipebook) prints recipes tibble::tibble().","code":""},{"path":"/reference/RecipeBook-class.html","id":"getters","dir":"Reference","previous_headings":"","what":"Getters","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"names(recipebook) obtains names recipes. length(recipebook) obtains number recipes. recipes(recipebook) obtains recipes tibble::tibble(). meal_plan(recipebook) obtains meal_plan tibble::tibble(). shopping_list(recipebook) obtains shopping_list tibble::tibble(). favourites(recipebook) obtains recipes marked favourites.","code":""},{"path":"/reference/RecipeBook-class.html","id":"setters","dir":"Reference","previous_headings":"","what":"Setters","title":"S4 class containing recipes, their ingredients and meal plans — RecipeBook-class","text":"recipes(object) <- value can used set recipes.","code":""},{"path":"/reference/create_meal_plan.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a customisable meal plan — create_meal_plan","title":"Create a customisable meal plan — create_meal_plan","text":"create_meal_plan() expects RecipeBook-class object input. available options customizing meal plan include; days week meals (\"Lunch\" \"Dinner\") plan , method use whether use favourite recipes.","code":""},{"path":"/reference/create_meal_plan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a customisable meal plan — create_meal_plan","text":"","code":"create_meal_plan(   recipebook,   which_days = weekdays(),   which_meals = c(\"Lunch\", \"Dinner\"),   method = c(\"auto\", \"random\"),   fav_only = FALSE,   set_last_eaten = TRUE )"},{"path":"/reference/create_meal_plan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a customisable meal plan — create_meal_plan","text":"recipebook RecipeBook-class object. which_days character() days week plan , format \"Mon\" which_meals character() meals plan , one \"Lunch\" \"Dinner\". method character() method use creating meal plan, one \"auto\", \"random\". fav_only logical() whether pick favourite recipes. set_last_eaten logical() whether record selected recipes used meal plan today. info taken account optimising meal planning algorithm method set \"auto\".","code":""},{"path":"/reference/create_meal_plan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a customisable meal plan — create_meal_plan","text":"RecipeBook-class object containing created meal_plan.","code":""},{"path":"/reference/create_meal_plan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a customisable meal plan — create_meal_plan","text":"","code":"recipebook <- create_meal_plan(recipebook_example)  meal_plan(recipebook) #> # A tibble: 14 × 7 #>    day   meal   recipe_index names                  ingredients fav   last_eaten #>    <fct> <fct>         <int> <chr>                  <list>      <lgl> <date>     #>  1 Mon   Lunch            16 Creamy Pollock, Samph… <Ingrdnts>  FALSE 2022-03-22 #>  2 Mon   Dinner           13 Creamy Chicken & Much… <Ingrdnts>  FALSE 2022-03-22 #>  3 Tues  Lunch            18 Normandy Pork & Cider… <Ingrdnts>  FALSE 2022-03-22 #>  4 Tues  Dinner            4 Chickpea & Sweet Pota… <Ingrdnts>  FALSE 2022-03-22 #>  5 Wed   Lunch            10 Chipotle, Corn & Chee… <Ingrdnts>  FALSE 2022-03-22 #>  6 Wed   Dinner           23 Hoisin Beef Noodles &… <Ingrdnts>  FALSE 2022-03-22 #>  7 Thurs Lunch             9 Squash, Corn & Tomati… <Ingrdnts>  FALSE 2022-03-22 #>  8 Thurs Dinner            7 Steak Tagliata & Roas… <Ingrdnts>  FALSE 2022-03-22 #>  9 Fri   Lunch             3 Chicken with Rosemary… <Ingrdnts>  FALSE 2022-03-22 #> 10 Fri   Dinner            2 Crispy Duck with Fava… <Ingrdnts>  FALSE 2022-03-22 #> 11 Sat   Lunch             1 Akoori Eggs with Spin… <Ingrdnts>  FALSE 2022-03-22 #> 12 Sat   Dinner           24 Mexican Enchiladas     <Ingrdnts>  FALSE 2022-03-22 #> 13 Sun   Lunch             8 Sweetcorn & Spring On… <Ingrdnts>  FALSE 2022-03-22 #> 14 Sun   Dinner            5 Gaucho Steaks with Ch… <Ingrdnts>  FALSE 2022-03-22"},{"path":"/reference/create_shopping_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a shopping list — create_shopping_list","title":"Create a shopping list — create_shopping_list","text":"Expects RecipeBook-class object non-empty meal plan slot input. shopping list consist summarised table ingredients required cook recipes current meal plan.","code":""},{"path":"/reference/create_shopping_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shopping list — create_shopping_list","text":"","code":"create_shopping_list(   recipebook,   filter_method = c(\"none\", \"manual\", \"minimal\") )"},{"path":"/reference/create_shopping_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shopping list — create_shopping_list","text":"recipebook RecipeBook-class object. filter_method character() method used filter store cupboard ingredients shopping list.","code":""},{"path":"/reference/create_shopping_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a shopping list — create_shopping_list","text":"tibble::tibble() containing shopping list.","code":""},{"path":"/reference/read_ingredients.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a list of ingredients from a character vector — read_ingredients","title":"Read in a list of ingredients from a character vector — read_ingredients","text":"Read list ingredients character vector","code":""},{"path":"/reference/read_ingredients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a list of ingredients from a character vector — read_ingredients","text":"","code":"read_ingredients(ingredients, delim = \";\")"},{"path":"/reference/read_ingredients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a list of ingredients from a character vector — read_ingredients","text":"ingredients character() containing ingredient info separated delim. element denote ingredients coming distinct recipe. delim character() separates ingredient.","code":""},{"path":"/reference/read_ingredients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a list of ingredients from a character vector — read_ingredients","text":"list() elements Ingredients-class objects.","code":""},{"path":"/reference/read_ingredients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in a list of ingredients from a character vector — read_ingredients","text":"","code":"read_ingredients(   c(     \"butter;6 eggs;1 bag coriander;1 punnet mixed baby tomatoes\",     \"1 tsp garam masala;1 bag baby spinach;1 lemon;1 chilli\"   ),   delim = \";\" ) #> [[1]] #> 1 Butter #> 6 Eggs #> 1 bag Coriander #> 1 punnet Mixed Baby Tomatoes #>  #> [[2]] #> 1 tsp Garam Masala #> 1 bag Baby Spinach #> 1 Lemon #> 1 Chilli #>"},{"path":"/reference/recipebook_example.html","id":null,"dir":"Reference","previous_headings":"","what":"An example recipe book — recipebook_example","title":"An example recipe book — recipebook_example","text":"RecipeBook-class object created using autorecipes::create_recipebook() containing 26 example recipes. recipes originate recipe boxes ordered Riverford. Riverford wonderful UK company producing sustainable, delicious, locally-sourced food - check !","code":""},{"path":"/reference/recipebook_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example recipe book — recipebook_example","text":"","code":"recipebook_example"},{"path":"/reference/recipebook_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example recipe book — recipebook_example","text":"tibble::tibble() 26 rows 2 columns: names character() recipe name. ingredients character() name, quantity type ingredient, stored list() Ingredients-class objects.","code":""},{"path":"/reference/recipebook_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example recipe book — recipebook_example","text":"generated using autorecipes/data-raw/recipebook_example.R","code":""},{"path":"/reference/recipes_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Set of example recipes — recipes_example","title":"Set of example recipes — recipes_example","text":"dataset containing 26 example recipes originating recipe boxes ordered Riverford. Riverford wonderful UK company producing sustainable, delicious, locally-sourced food - check !","code":""},{"path":"/reference/recipes_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set of example recipes — recipes_example","text":"","code":"recipes_example"},{"path":"/reference/recipes_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Set of example recipes — recipes_example","text":"tibble::tibble() 26 rows 4 columns: title character() recipe name. title_tidy character() recipe name computer-friendly format. ingredients character() quantity type ingredient, separated \";\". instructions character() instructions cooking recipe.","code":""},{"path":"/reference/recipes_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Set of example recipes — recipes_example","text":"generated using autorecipes/data-raw/recipes_example.R","code":""},{"path":"/reference/set_favourites.html","id":null,"dir":"Reference","previous_headings":"","what":"Add or remove favourite recipes — set_favourites","title":"Add or remove favourite recipes — set_favourites","text":"Add remove favourite recipes","code":""},{"path":"/reference/set_favourites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add or remove favourite recipes — set_favourites","text":"","code":"add_favourites(recipebook, indexes, method = c(\"index\", \"manual\"))  rm_favourites(recipebook, indexes, method = c(\"index\", \"manual\"))"},{"path":"/reference/set_favourites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add or remove favourite recipes — set_favourites","text":"recipebook object RecipeBook-class. indexes numeric() indexes recipes change, required method set 'index'. method character() one 'manual' 'index'. 'manual', allow users interactively pick recipes add/remove favourites. 'index' modify recipes corresponding indexes.","code":""},{"path":"/reference/set_recipes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add or remove recipes — set_recipes","title":"Add or remove recipes — set_recipes","text":"Add remove recipes","code":""},{"path":"/reference/set_recipes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add or remove recipes — set_recipes","text":"","code":"add_recipes(recipebook, names, ingredients)  rm_recipes(recipebook, indexes = NULL, method = c(\"manual\", \"index\"))"},{"path":"/reference/set_recipes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add or remove recipes — set_recipes","text":"recipebook object RecipeBook-class. names character() containing name recipes. ingredients character() list() Ingredient-class objects. character(), read using read_ingredients(). indexes numeric() indexes recipes change, required method set 'index'. method character() one 'manual' 'index'. 'manual', allow users interactively pick recipes add/remove favourites. 'index' modify recipes corresponding indexes.","code":""},{"path":"/reference/weekdays.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the weekdays of interest — weekdays","title":"Obtain the weekdays of interest — weekdays","text":"Obtain weekdays interest","code":""},{"path":"/reference/weekdays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the weekdays of interest — weekdays","text":"","code":"weekdays(which_days = NULL)"},{"path":"/reference/weekdays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the weekdays of interest — weekdays","text":"which_days numeric() character(), default NULL. numeric, must index 1:7. character, must one  c(\"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\", \"Sun\"). NULL, return week days.","code":""},{"path":"/reference/weekdays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the weekdays of interest — weekdays","text":"character() selected weekdays","code":""},{"path":"/reference/weekdays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain the weekdays of interest — weekdays","text":"","code":"weekdays() #> [1] \"Mon\"   \"Tues\"  \"Wed\"   \"Thurs\" \"Fri\"   \"Sat\"   \"Sun\"   weekdays(1:3) #> [1] \"Mon\"  \"Tues\" \"Wed\"  weekdays(c(\"Mon\", \"Tues\", \"Wed\")) #> [1] \"Mon\"  \"Tues\" \"Wed\""},{"path":"/news/index.html","id":"autorecipes-010","dir":"Changelog","previous_headings":"","what":"autorecipes 0.1.0","title":"autorecipes 0.1.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES main changes function foo() parameter param. BUG FIXES bug fixes. See details http://bioconductor.org/developers/package-guidelines/#news.","code":""}]
